<%- include('./partials/nav') %>

<br>
<br>
<br>
<br>
<div class="container">
  <%- include('./partials/messages') %>
        <div class="container">
          <div class="page-header">
              <div class=" text-center ">
                  <h4 class="display-4">Our Contestants</h4>
              </div>
          </div>
              
      </div>
      <div class="row">
        <% contestants.forEach((data) => { %>
          <div class="col-md-3 mb-4">
            <div class="card contender" data-id="<%= data.id %>">
              <div class="user-images">
                <div class="image-gallery">
                  <img src="<%= data.photo_url %>" class="card-img-top" alt="<%= data.fname %> <%= data.lname %>">
                </div>
              </div>
              <div class="card-body text-center">
                <p class="card-text text-success">Total Votes: <strong id="voteCount-<%= data.id %>"><%= data.vote_count %></strong></p>
      
                <div class="user-actions mb-2">
                  <!-- Render vote buttons only if not evicted -->
                  <% if (data.status !== "evicted") { %>
                    <button class="btn btn-outline-danger decreaseVotes" data-id="<%= data.id %>">-</button>
                    <span class="mx-2 voteNumber" id="voteNumber-<%= data.id %>">1</span>
                    <button class="btn btn-outline-success increaseVotes" data-id="<%= data.id %>">+</button>
                  <% } else { %>
                    <!-- If evicted, display a message -->
                    <p class="mt-2 btn btn-danger w-100">
                      <i class="bi bi-exclamation-triangle-fill"></i> Evicted
                    </p>
                  <% } %>
                </div>
      
      
                <!-- Render form only if not evicted -->
                <% if (data.status !== "evicted") { %>
                  <form class="paymentForm" id="paymentForm-<%= data.id %>">
                    <input type="email" class="form-control" id="email-<%= data.id %>" required value="<%= user.email %>" hidden>
                    <input type="number" class="form-control amountInput" id="amount-<%= data.id %>" value="100" hidden>
                    <button type="submit" class="mt-2 btn btn-success voteButton" style="width: 100%;">
                      Pay â‚¦<span class="paymentAmount" id="paymentAmount-<%= data.id %>">100</span>
                    </button>
                  </form>
                <% } %>
              </div>
            </div>
          </div>
        <% }) %>
      </div>
      
</div>

<%- include('./partials/footer') %>


<script>
const votePrice = 100;  // Default price per vote

// Function to update vote number and price for a specific contestant
function updateVoteAndPrice(card, currentVotes) {
  const voteNumberElement = card.querySelector('.voteNumber');
  const sumTotalElement = card.querySelector('.sumTotal');
  const paymentAmountElement = card.querySelector('.paymentAmount');  // Button span to show payment amount
  const amountInputElement = card.querySelector('.amountInput');  // Hidden input holding the amount

  // Calculate total price based on current votes
  const totalPrice = currentVotes * votePrice;

  // Check if elements exist before updating
  if (voteNumberElement) {
    voteNumberElement.textContent = currentVotes;  // Update vote count display
  }
  if (sumTotalElement) {
    sumTotalElement.textContent = totalPrice;  // Update total price display
  }
  if (paymentAmountElement) {
    paymentAmountElement.textContent = totalPrice;  // Update button display amount
  }
  if (amountInputElement) {
    amountInputElement.value = totalPrice;  // Update hidden input field with the total price
  } else {
    console.error('Hidden amount input not found for contestant', card.getAttribute('data-id'));
  }
}

// Loop through each contestant card and add event listeners
document.querySelectorAll('.card.contender').forEach(card => {
  let currentVotes = 1;  // Set initial vote count for each contestant

  const contestantId = card.getAttribute('data-id');
  const decreaseBtn = card.querySelector(`.decreaseVotes[data-id='${contestantId}']`);
  const increaseBtn = card.querySelector(`.increaseVotes[data-id='${contestantId}']`);
  const paymentForm = card.querySelector(`#paymentForm-${contestantId}`);

  // Initialize with default values
  updateVoteAndPrice(card, currentVotes); 

  if (increaseBtn && decreaseBtn) {
    // Increase votes
    increaseBtn.addEventListener('click', function() {
      currentVotes++;
      updateVoteAndPrice(card, currentVotes);  // Update the display when votes are increased
    });

    // Decrease votes
    decreaseBtn.addEventListener('click', function() {
      if (currentVotes > 1) {
        currentVotes--;
        updateVoteAndPrice(card, currentVotes);  // Update the display when votes are decreased
      }
    });
  } else {
    console.error(`Increase or Decrease button not found for contestant ${contestantId}`);
  }

  if (paymentForm) {
    // Submit payment form for each contestant
    paymentForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const email = card.querySelector(`#email-${contestantId}`).value;
      const finalAmount = parseFloat(card.querySelector(`#amount-${contestantId}`).value);  // Get updated total amount from hidden input
      const voteNumber = currentVotes;  // Get the current vote number

      // Debugging output for confirmation
      console.log('Submitting form with data:', {
        email,
        amount: Math.floor(finalAmount),
        contestantId,
        voteNumber
      });

      // Make Paystack payment request
      fetch('/pay', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email, amount: Math.floor(finalAmount), contestantId, voteNumber }),  // Send contestant ID, amount, and vote number
      })
      .then(response => response.json())
      .then(data => {
        if (data.status) {
          window.location.href = data.data.authorization_url;
        } else {
          alert('Payment failed. Please try again.');
        }
      })
      .catch((error) => {
        console.error('Error:', error);
        alert('An error occurred. Please try again.');
      });
    });
  } else {
    console.error(`Payment form not found for contestant ${contestantId}`);
  }
});


  </script>
  